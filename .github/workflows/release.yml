name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build tool
        run: pip install build

      - name: Build source + wheel
        run: python -m build

      - name: Create GitHub Release and Upload Python Artifacts
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*.whl
          draft: false
          prerelease: false

  build-pyinstaller:
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            suffix: ''
            ext: ''
          - os: windows-latest
            name: windows
            suffix: '.exe'
            ext: '.exe'
          - os: ubuntu-latest
            name: alpine
            suffix: ''
            ext: ''
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    env:
      PYTHON_VERSION: "3.10"

    container:
      image: ${{ matrix.name == 'alpine' && 'python:3.10.18-alpine' || '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        if: matrix.name != 'alpine'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipenv
        run: |
          python -m pip install pipenv

      - name: Install deps and run pyinstaller
        run: |
          python3 -m pipenv install
          python3 -m pipenv run pip install pyinstaller

      - name: Build executable
        if: matrix.name == 'alpine'
        run: apk add binutils bash

      - name: Build executable
        run: python3 -m pipenv run pyinstaller accuknox-aspm-scanner.spec

      - name: Test Binary
        shell: bash
        run: |
          ./dist/accuknox-aspm-scanner${{ matrix.ext }} --help

      - name: Upload Native Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: dist/accuknox-aspm-scanner${{ matrix.ext }}
          asset_name: accuknox-aspm-scanner_${{ matrix.name }}_x86_64${{ matrix.ext }}
          asset_content_type: application/octet-stream